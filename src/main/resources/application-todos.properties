
#Rodando banco e backend via docker (o hst deverá ser o nome do container)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://docker-postgres:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.hibernate.ddl-auto=create-drop

#Rodando banco e backend via docker (o hst deverá ser o nome do container)
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://teste-postgres:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=Postgres2018!
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#spring.jpa.hibernate.ddl-auto=create-drop

#Rodando banco via, aplicação rodando no eclipse
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://0.0.0.0:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=Postgres2018!
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#spring.jpa.hibernate.ddl-auto=create-drop


#Via postgres instalado normal no linux (service postgres start...)
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/bd_catalogo_musical_api
#spring.datasource.username=usr_catalogo_musical_api
#spring.datasource.password=pwd_catalogo_musical_api
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

#create, create-drop, validate, update
spring.jpa.hibernate.ddl-auto=create-drop

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#show sql statement
#logging.level.org.hibernate.SQL=debug

#show sql values
#logging.level.org.hibernate.type.descriptor.sql=trace

logging.file=${user.home}/catalogo-musical-api.log

server.port=8084
spring.main.banner-mode=off

server.servlet.context-path=/catalogo-musical-api

#spring.jackson.date-format= # For instance, 'yyyy-MM-dd HH:mm:ss'.

#spring.profiles.active=dev



#keycloak.auth-server-url=http://localhost:8180/auth
#keycloak.realm=SpringBootKeycloak
#keycloak.resource=login-app
#keycloak.public-client=true
#keycloak.security-constraints[0].authRoles[0]=user1
#keycloak.security-constraints[0].securityCollections[0].patterns[0]=/bandas/*